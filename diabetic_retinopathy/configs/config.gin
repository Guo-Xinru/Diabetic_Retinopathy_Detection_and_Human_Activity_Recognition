# Architectures
vgg_like.base_filters = 8
vgg_like.n_blocks = 5
vgg_like.dense_units = 32
vgg_like.dropout_rate = 0.25

# Layers VGG BLOCK
vgg_block.kernel_size = (3, 3)

# Layers Residual Block
residual_block.kernel_size = (3, 3)

# Training
Trainer.total_steps = 3e3
Trainer.log_interval = 10
Trainer.ckpt_interval = 10

# Input pipeline
# load.name = 'mnist'
# load_kaggle.data_dir = '/home/data/tensorflow_datasets'
# load_kaggle.name = 'Kaggle'


# Densenet
dense_net.input_shape = (256, 256, 3)
dense_net.n_classes = 2
dense_net.n_blocks = 1
dense_net.num_layers_per_block = 5
#dense_net.base_filters = 8
dense_net.growth_rate = 16
dense_net.compression = 0.5

# Resnet 18
res_net.filters = [16, 32]
res_net.n_blocks = [1, 1]
